{"version":3,"sources":["componets/SocialProfile/Profile.module.css","componets/Friends/friends.module.css","componets/Statisctick/Statistics.module.css","componets/SocialProfile/Profile.js","componets/Statisctick/Statistics.js","componets/Friends/FriendListItem.js","componets/Friends/Friends.js","App.js","index.js"],"names":["module","exports","Profile","props","avatar","name","tag","location","followers","views","likes","className","s","profile","description","src","alt","width","stats","label","quantity","Statistics","title","statistics","statlist","map","id","percentage","item","style","backgroundColor","randomColor","color","Math","floor","random","toString","slice","length","FriendsListItem","isOnline","statusOn","statusOff","Friends","friends","friendsList","App","user","statisticalData","friendsData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a49032f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2jwhI\",\"description\":\"Profile_description__2_JSr\",\"avatar\":\"Profile_avatar__1tu4V\",\"name\":\"Profile_name__BtdXs\",\"tag\":\"Profile_tag__3_6GE\",\"location\":\"Profile_location__22Gnh\",\"stats\":\"Profile_stats__1OuE1\",\"items\":\"Profile_items__1bpYj\",\"label\":\"Profile_label__3ywFz\",\"quantity\":\"Profile_quantity__2gHjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"friends_friendsList__ykUVZ\",\"item\":\"friends_item__lObxe\",\"avatar\":\"friends_avatar__2sug4\",\"name\":\"friends_name__10KpZ\",\"statusOn\":\"friends_statusOn__yeiTR\",\"statusOff\":\"friends_statusOff__3q5xk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__36Bna\",\"item\":\"Statistics_item__1u5S0\",\"label\":\"Statistics_label__1PDVu\",\"percentage\":\"Statistics_percentage__2C039\"};","import s from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Profile(props) {\n  const { avatar, name, tag, location, followers, views, likes } = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={s.avatar}\n          width=\"280\"\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statlist}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={s.item}\n            key={id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n// Функция  Рендера цветов\nfunction randomColor() {\n  const color = Math.floor(Math.random() * 16777216).toString(16);\n  return '#000000'.slice(0, -color.length) + color;\n}\n","import PropTypes from 'prop-types';\nimport s from './friends.module.css';\n\nexport default function FriendsListItem({ id, isOnline, avatar, name }) {\n  return (\n    <li className={s.item} key={id}>\n      <span className={isOnline ? s.statusOn : s.statusOff}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendsListItem.propTypes = {\n  id: PropTypes.number,\n  isOnline: PropTypes.bool,\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport FriendsListItem from './FriendListItem';\nimport s from './friends.module.css';\n\nexport default function Friends({ friends }) {\n  return (\n    <ul className={s.friendsList}>\n      {friends.map(({ id, isOnline, avatar, name }) => (\n        <FriendsListItem\n          key={id}\n          isOnline={isOnline}\n          avatar={avatar}\n          name={name}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriends.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      isOnline: PropTypes.bool,\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n};\n","// Компонент профиля\nimport Profile from './componets/SocialProfile/Profile';\nimport user from './componets/SocialProfile/user.json';\n// Компонент статистики\nimport Statistics from './componets/Statisctick/Statistics';\nimport statisticalData from './componets/Statisctick/statistical-data.json';\n// Компонент друзей\nimport Friends from './componets/Friends/Friends';\nimport friendsData from './componets/Friends/Friends-data.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        likes={user.stats.likes}\n        views={user.stats.views}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Friends friends={friendsData} />\n    </div>\n  );\n}\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}